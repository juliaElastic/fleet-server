# This config is intended to be used with a stand-alone fleet-server instance for development.
output:
  elasticsearch:
    hosts: '${ELASTICSEARCH_HOSTS:https://localhost:9200}'
    service_token: '${ELASTICSEARCH_SERVICE_TOKEN}'
    ssl.ca_trusted_fingerprint: '${ELASTICSEARCH_CA_TRUSTED_FINGERPRINT}'

fleet:
  agent:
    id: '${FLEET_SERVER_AGENT_ID:dev-fleet-server}'

# fleet server integration policy

# server.instrumentation:
#   enabled: true
#   hosts:
#   - https://d722948037ee4ebd8d4294b91f2a8421.apm.us-east-1.aws.cloud.es.io:443
#   secret_token: JpBCcOQxN81D5yucs2
#   transaction_sample_rate: 1
#   global_labels: obs_perf_build_num=XXX;obs_perf_test_suite=test_02
#   environment: dev-juliabardi

inputs:
  - type: fleet-server
    policy.id: '${FLEET_SERVER_POLICY_ID:fleet-server-policy}'
    server:
      host: 0.0.0.0
      port: 8220
      instrumentation:
        enabled: true
        # hosts: ["https://d722948037ee4ebd8d4294b91f2a8421.apm.us-east-1.aws.cloud.es.io:443"]
        # secret_token: JpBCcOQxN81D5yucs2
        hosts: ["https://184993dcfa7f4a57bf3725cd956939f9.apm.us-central1.gcp.cloud.es.io:443"]
        secret_token: L6azzQBxERPYa73Ojs
        environment: development
      ssl:
        enabled: true
        certificate: creds/fleet-server.crt
        key: creds/fleet-server.key
      runtime:
        memory_limit: 4000000000 

logging:
  to_stderr: true # Force the logging output to stderr
  pretty: true
  level: '${LOG_LEVEL:DEBUG}'

# Enables the stats endpoint under http://localhost:5601 by default.
# Additional stats can be found under http://127.0.0.1:5066/stats and http://127.0.0.1:5066/state
http.enabled: true
#http.host: http://127.0.0.1
#http.port: 5601
